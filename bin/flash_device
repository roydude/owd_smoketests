#!/bin/bash
#
# Relies on user and password being set in ~/.wgetrc

#
# Make sure pre-requisited are in place.
#
if [ ! -f "$HOME/.wgetrc" ]
then
    echo "
    $HOME/.wgetrc - file not found!
    
    You must create this file with the following lines:
    
    user=<username>
    password=<password>
    
    ... then re-run this script.

    (Press ENTER to exit the script.)
    "

    read ans
    exit 1
fi

#
# Set up variables.
#
MYNAME=$(basename $0)
if [ ! "$1" ] || [ ! "$2" ]
then 
    echo "

        Syntax: $MYNAME <unagi|keaon|etc...> <eng|user>

        i.e. $MYNAME unagi eng

        Press ENTER to exit the script.
    "
    read ans
    
    exit 6
fi

DEVICE=$1
TYPE=$2
LOG_FILE=/tmp/${DEVICE}_flash_download.log
SOURCE_DIR=https://owd.tid.es/releases/DEVELOP/lastest-version
SCRIPT=$(readlink -f $0)
SCRIPTPATH=$(dirname $SCRIPT)
CONN_ABD=${SCRIPTPATH}/connect_device
TARGET_DIR=$HOME/Downloads/device_flash_files
[ ! -d "$TARGET_DIR" ] && mkdir -p $TARGET_DIR


#
# Get list of files available in the release directory (in order of last modified descending).
#
wget -O /tmp/unagi_list --no-check-certificate $SOURCE_DIR/?C=M;O=D


#
# Get the name of the newest 'eng' release (which is at the top of the list).
#
REL_FILE=$(egrep "${DEVICE}.*${TYPE}.*train" /tmp/unagi_list | head -1 | sed -e "s/.*href=\"//" | sed -e "s/\".*$//")


#
# Download the release file (takes about 15-20 mins on free network).
#
if [ "$REL_FILE" ]
then
	echo "Fetching $REL_FILE ..."
	cd $TARGET_DIR
    
    #
    # Remove any previous attempts.
    #
    ls | while read fnam
    do
        if [ "$(echo $fnam | grep $REL_FILE)" ]
        then
            rm -f $fnam
        fi
    done
	
    wget --no-check-certificate $SOURCE_DIR/$REL_FILE | tee $LOG_FILE
else
	echo "Cannot determine 'eng' release for $DEVICE from $SOURCE_DIR!"
    exit 3
fi


#
# Now the download has completed, offer to flash the device.
#
printf "\nDownload complete - connect your $DEVICE device and press ENTER to flash."
read ans
echo ""

echo "Flashing with $REL_FILE ..."

# Is it more than 1 day old?
x=$(find . -name $REL_FILE -mtime -1)
if [ "$x" == "" ]
then
    printf "\nWARNING: Flash file is not from today!\n\n"
    printf "	Press ENTER to continue, or CTRL+C to abort ..."
    read ans
    echo ""
fi


#
# Unpack the file.
#
echo "Unpacking $REL_FILE ..."
tar xvfz $REL_FILE


#
# Go into the release directory (if you can).
#
REL_DIR=${REL_FILE%.tgz} 
if [ ! -d "$REL_DIR" ]
then
    printf "\n***** ERROR: $REL_DIR does not exist!\n\n"
    echo "Perhaps there was a problem with the tarfile! Aborting ..."
    exit 4
fi

cd $REL_DIR


#
# Restart adb service (just to be sure we're pointing to the correct device).
#
# In case 'su' doesn't have the path to adb, grab it first ...
cmd_adb=$(which adb)
if [ ! "$cmd_adb" ]
then
    printf "\nCould not find 'adb' - please check your installation! Aborting ...\n\n"
    exit 5
fi
sudo $cmd_adb kill-server > /dev/null
sudo $cmd_adb start-server > /dev/null
sudo $cmd_adb forward tcp:2828 tcp:2828 > /dev/null


#
# Do the flash.
#
printf "\n\nFLASHING DEVICE - DO NOT DISTURB! :)\n"
./flash.sh


#
# Tidy up (remove the unpacked directory, but leave the flash file in case we need it again).
#
cd $TARGET_DIR
rm -rf $REL_DIR

printf "\n\nDONE!\n"
exit 0
