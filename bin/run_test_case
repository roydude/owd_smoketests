#!/bin/bash

#
# Make sure we have all the input we need.
#
while getopts "t:d:f:r:e:" option
do
        case "$option" in
        t) export TEST_CASE="$OPTARG";;
        d) export TEST_DESC="$OPTARG";;
        f) export TEST_FILE="$OPTARG";;
        r) export RESULT_FILE="$OPTARG";;
        e) export ERR_FILE="$OPTARG";;
        esac
done

if 	[ ! "$TEST_CASE" ]   || \
	[ ! "$TEST_DESC" ]   || \
	[ ! "$TEST_FILE" ]   || \
	[ ! "$RESULT_FILE" ] || \
	[ ! "$ERR_FILE" ] 
then
	echo "Syntax: $0 -t <test case> -d <description> -f <test file> -r <result file> -e <error file>"
	exit 1
fi

export SUM_FILE=${RESULT_FILE}_${TEST_CASE}_summary
export DET_FILE=${RESULT_FILE}_${TEST_CASE}_detail


#
# Run the test using 'gaiatest', ignore STDOUT (because what we want is being
# writtin to a file), but capture STDERR.
#
gaiatest --address localhost:2828 $TEST_FILE > /dev/null 2>$ERR_FILE

#
# Now append any Marionette output to the details file (sometimes it contains
# 'issues' that we don't catch).
#
x=$(grep -i error $ERR_FILE)
if [ "$x" ]
then
	echo "



################################################################################
#
# OUTPUT FROM MARIONETTE ....
# ===========================
#

$(cat $ERR_FILE)
" >> $DET_FILE

fi


#
# Display the summary file.
# If there is an 'error' in the marionette output but we think our tests
# passed, this indicates a possible error with our test code.
#
cat $SUM_FILE | while read line
do
    printf "$line"
    result=$(echo $line | awk '{print $NF}')
    if [ "$result" = "Passed" ]
    then
        x=$(grep -i error $ERR_FILE)
	if [ "$x" ]
	then
	    printf " (NOTE: possible test code error!)"
	fi
    fi
    printf "\n"
done
