#!/bin/bash

mkdir /tmp/tests 2>/dev/null

export RESULT_FILE="/tmp/tests/B2G_tests.$(date +%Y%m%d%H%M%S)"
export RUNTEST="./bin/run_test_case"
export TESTDIR="./tests"

#
# Load default environment variables.
#
. ./tests_parameters/parameters

#
# Did the caller just want to run certain tests:
#
TESTS="$@"

# Default to all tests.
if [ ! "$TESTS" ]
then
	while read line
	do
		TESTS="$TESTS $line"
	done <<EOF
	$(ls ./tests/test_[0-9][0-9].py | grep -v "test_00" | sed -e "s/^.*test_//" | sed -e "s/\..*//")
EOF
fi


# Pad the number with 0's ...
f_pad(){
        # Make sure the number is 2 digits (pad with 0).
        echo $1 | awk '{printf("%02d", $1)}'
}

# Run the test as required ...
run_test(){
    FNAM=$1
    DESC=$(grep "_Description" $FNAM | head -1 | sed -e "s/^[^\"]*\"\(.*\)\"/\1/")
    DESC=${DESC:-"(no description found!)"}
    CASE=$(echo ${FNAM%.py} | sed -e "s/^.*_//")
    
    $RUNTEST -t $CASE -d "$DESC" -f $FNAM -r $RESULT_FILE -e ${RESULT_FILE}.err
}



#
# Some required input first ...
#
printf "\n**************************\n\n"

for i in $(echo $TESTS)
do
	x=$(f_pad $i)
	while read line
	do
		VARNAM=$(echo $line | sed -e "s/^.*(\"//" | sed -e "s/\".*//")
		VARSTR=$(echo $line | sed -e "s/^.*, *\"//" | sed -e "s/\".*//")

		#
		# Make sure it's not already set.
		#
		env_set=$(eval echo $`echo $VARNAM`)
		if [ ! "$env_set" ]
		then
			QUESTION=("${QUESTION[@]}" "$VARSTR")
			VARIABLE=("${VARIABLE[@]}" "$VARNAM")
		fi

	done << EOF
	$(grep -i "testUtils.get_os_variable" tests/test_${x}.py )
EOF
done

for ((i=0; i<=${#QUESTION[@]}; ++i))
do
	if [ "${QUESTION[$i]}" ]
	then
		if [ ! "$gotParams" ]
		then
			gotParams="Y"
			printf "\nSome of the tests you have chosen require input ...\n\n"
		fi

		Q="${QUESTION[$i]}"
		V="${VARIABLE[$i]}"

		printf "$Q [$V]: "
		read ans

		eval export $V="$ans"

	fi
done 

[ "$gotParams" ] && printf "\n\n"


#
# If ./.gaiatest_installed is present, then just skip past the setup.
#
if [ ! -f "./.gaiatest_installed" ]
then
	#
	# Setup gaiatest and Marionette.
	#
	printf "Making sure THIS gaiatest will be used (it has some necessary tweaks!) + latest Marionette ....\n\n"

	find /usr/local/lib -name "marionette_client-*.egg" | while read line
	do
	    if [ -d "$line" ]
	    then
		[ -d $line.bak ] && sudo rm -rf $line.bak
		sudo mv $line $line.bak
		break
	    fi
	done

	# Re-install gaiatest (which will get marionette with the latest one since it's no longer there).
	cd gaia-ui-tests
	echo ""
	sudo python setup.py develop > /tmp/gaiatest_install.log 2> /tmp/gaiatest_install.log
	cd - > /dev/null 2>/dev/null

	#
	# Shouldn't need to do this every time, so put this file here to remember we did it.
	#
	touch .gaiatest_installed
fi

#
# Establsh connection to device.
#
./bin/connect_device

#
# Now run tests as required.
#
if [ ! "$TESTS" ]
then
    ls ./tests/test_*.py | while read fnam
    do
        run_test $fnam
    done
else
    file_list=""
    
    for i in $(echo $TESTS)
    do
	x=$(f_pad $i)
        
        run_test ./tests/test_${x}.py
    done
fi


clear
printf "\n\n"
echo "*******************************************************"
printf "\n             RESULT SUMMARY: \n\n"
echo "*******************************************************"
cat $RESULT_FILE
printf "\n*******************************************************\n\n"
printf "(These results are stored in $RESULT_FILE.)\n\n"
